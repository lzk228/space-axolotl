using System.Numerics;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.CustomControls;
using Robust.Client.UserInterface.XAML;

namespace Content.Client.UserInterface.Controls;

[GenerateTypedNameReferences]
[Virtual]
public partial class FancyWindow : BaseWindow
{
    private const int DragMarginSize = 7;
    public const string StyleClassWindowHelpButton = "windowHelpButton";

    public FancyWindow()
    {
        RobustXamlLoader.Load(this);

        CloseButton.OnPressed += _ => Close();

        XamlChildren = ContentsContainer.Children;
    }

    public string? Title
    {
        get => WindowTitle.Text;
        set => WindowTitle.Text = value;
    }

    protected override DragMode GetDragModeFor(Vector2 relativeMousePos)
    {
        var mode = DragMode.Move;

        if (!Resizable)
            return mode;

        if (relativeMousePos.Y < DragMarginSize)
        {
            mode = DragMode.Top;
        }
        else if (relativeMousePos.Y > Size.Y - DragMarginSize)
        {
            mode = DragMode.Bottom;
        }

        if (relativeMousePos.X < DragMarginSize)
        {
            mode |= DragMode.Left;
        }
        else if (relativeMousePos.X > Size.X - DragMarginSize)
        {
            mode |= DragMode.Right;
        }

        return mode;
    }
}
