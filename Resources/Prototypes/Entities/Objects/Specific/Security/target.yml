- type: entity
  id: BaseTarget
  parent: BaseStructureDynamic
  abstract: true
  components:
  - type: Sprite
    sprite: Objects/Specific/Security/target.rsi
    state: target_stake
    noRot: true
  - type: Repairable
  - type: DamagePopup
    allowTypeChange: true
    damagePopupType: Combined
  - type: Fixtures
    fixtures:
      fix1:
        shape:
          !type:PhysShapeCircle
          radius: 0.35
        density: 200
        mask:
        - FullTileMask
        layer:
        - WallLayer
  - type: InteractionOutline
  - type: Physics
  - type: Damageable
    damageContainer: Inorganic
  - type: Destructible
    thresholds:
    - trigger:
        !type:DamageTrigger
        damage: 1000
      behaviors:
        - !type:DoActsBehavior
          acts: [ "Destruction" ]
    - trigger:
        !type:DamageTrigger
        damage: 500
      behaviors:
      - !type:SpawnEntitiesBehavior
        spawn:
          SheetSteel:
            min: 5
            max: 5
      - !type:PlaySoundBehavior
        sound:
          collection: MetalBreak
      - !type:DoActsBehavior
        acts: [ "Destruction" ]

- type: entity
  name: human target
  id: TargetHuman
  parent: BaseTarget
  description: A shooting target. This one is a human.
  components:
  - type: Sprite
    sprite: Objects/Specific/Security/target.rsi
    state: target_h

- type: entity
  name: syndicate target
  id: TargetSyndicate
  parent: BaseTarget
  description: A shooting target. This one is a syndicate agent.
  components:
  - type: Sprite
    sprite: Objects/Specific/Security/target.rsi
    state: target_s

- type: entity
  name: clown target
  id: TargetClown
  parent: BaseTarget
  description: A shooting target. This one is a clown.
  components:
  - type: Sprite
    sprite: Objects/Specific/Security/target.rsi
    state: target_c

# put it on a salvage or something
- type: entity
  name: strange target
  id: TargetStrange
  parent: BaseTarget
  description: A shooting target. You aren't quite sure what this one is, but it seems to be extra robust.
  components:
  - type: Sprite
    sprite: Objects/Specific/Security/target.rsi
    state: target_f
  - type: Destructible
    thresholds:
    - trigger:
        !type:DamageTrigger
        damage: 4000
      behaviors:
        - !type:DoActsBehavior
          acts: [ "Destruction" ]
    - trigger:
        !type:DamageTrigger
        damage: 2000
      behaviors:
      - !type:SpawnEntitiesBehavior
        spawn:
          SheetSteel:
            min: 10
            max: 10
      - !type:PlaySoundBehavior
        sound:
          collection: MetalBreak
      - !type:DoActsBehavior
        acts: [ "Destruction" ]

- type: entity
  name: cat tree
  id: BaseTargetCatTree
  parent: BaseTarget
  description: Why does the cat get better furniture than me?
  abstract: true
  components:
  - type: Sprite
    sprite: Structures/Furniture/cattree.rsi
    state: cattree
  - type: NpcFactionMember
  - type: MobState
  - type: MobThresholds
    thresholds:
      0: Alive
      500: Dead
  - type: Destructible
    thresholds:
    - trigger:
        !type:DamageTrigger
        damage: 1000
      behaviors:
        - !type:DoActsBehavior
          acts: [ "Destruction" ]
    - trigger:
        !type:DamageTrigger
        damage: 500
      behaviors:
      - !type:SpawnEntitiesBehavior
        spawn:
          MaterialCardboard:
            min: 1
            max: 7
      - !type:PlaySoundBehavior
        sound:
          collection: MetalBreak
      - !type:DoActsBehavior
        acts: [ "Destruction" ]

- type: entity
  name: HTN debug cat tree
  id: TargetCatTreeAlwaysMouse
  parent: BaseTargetCatTree
  categories: [ Debug ]
  suffix: DEBUG
  description: A cat tree. This one is covered in catnip.
  components:
  - type: NpcFactionMember
    factions:
      - Mouse

- type: entity
  name: cat tree
  id: TargetCatTree
  parent: BaseTargetCatTree
  components:
  - type: Sprite
    sprite: Structures/Furniture/cattree.rsi
    state: cattree
  - type: NpcTimedFaction
    timeUntilFactionChange: 240
    randomBonusTimeUntilFactionChange: 300
    timeAsFaction: 3
    randomBonusTimeAsFaction: 5
    faction: Mouse
  - type: Construction
    graph: TargetCatTree
    node: TargetCatTree

- type: entity
  id: TargetCatTreeBeige
  parent: TargetCatTree
  components:
  - type: Sprite
    sprite: Structures/Furniture/cattree.rsi
    layers:
      - state: cattree
      - state: cattree-beige
  - type: Construction
    graph: TargetCatTree
    node: TargetCatTreeBeige

- type: entity
  id: TargetCatTreeBlack
  parent: TargetCatTree
  components:
  - type: Sprite
    sprite: Structures/Furniture/cattree.rsi
    layers:
      - state: cattree
      - state: cattree-black
  - type: Construction
    graph: TargetCatTree
    node: TargetCatTreeBlack

- type: entity
  name: cat tree
  id: TargetCatTreeBlue
  parent: TargetCatTree
  components:
  - type: Sprite
    sprite: Structures/Furniture/cattree.rsi
    layers:
      - state: cattree
      - state: cattree-blue
  - type: Construction
    graph: TargetCatTree
    node: TargetCatTreeBlue

- type: entity
  name: cat tree
  id: TargetCatTreeCyan
  parent: TargetCatTree
  components:
  - type: Sprite
    sprite: Structures/Furniture/cattree.rsi
    layers:
      - state: cattree
      - state: cattree-cyan
  - type: Construction
    graph: TargetCatTree
    node: TargetCatTreeCyan

- type: entity
  name: cat tree
  id: TargetCatTreeGamble
  parent: TargetCatTree
  components:
  - type: Sprite
    sprite: Structures/Furniture/cattree.rsi
    layers:
      - state: cattree
      - state: cattree-gamble
  # I couldn't think of a good recipe for this one since we already used cloth for beige which I think is better. mapped only for now ig

- type: entity
  name: cat tree
  id: TargetCatTreeGreen
  parent: TargetCatTree
  components:
  - type: Sprite
    sprite: Structures/Furniture/cattree.rsi
    layers:
      - state: cattree
      - state: cattree-green
  - type: Construction
    graph: TargetCatTree
    node: TargetCatTreeGreen

- type: entity
  name: cat tree
  id: TargetCatTreePink
  parent: TargetCatTree
  components:
  - type: Sprite
    sprite: Structures/Furniture/cattree.rsi
    layers:
      - state: cattree
      - state: cattree-pink
  - type: Construction
    graph: TargetCatTree
    node: TargetCatTreePink

- type: entity
  name: cat tree
  id: TargetCatTreePurple
  parent: TargetCatTree
  components:
  - type: Sprite
    sprite: Structures/Furniture/cattree.rsi
    layers:
      - state: cattree
      - state: cattree-purple
  - type: Construction
    graph: TargetCatTree
    node: TargetCatTreePurple

- type: entity
  name: cat tree
  id: TargetCatTreeRed
  parent: TargetCatTree
  components:
  - type: Sprite
    sprite: Structures/Furniture/cattree.rsi
    layers:
      - state: cattree
      - state: cattree-red
  - type: Construction
    graph: TargetCatTree
    node: TargetCatTreeRed

- type: entity
  name: cat tree
  id: TargetCatTreeSkyblue
  parent: TargetCatTree
  components:
  - type: Sprite
    sprite: Structures/Furniture/cattree.rsi
    layers:
      - state: cattree
      - state: cattree-skyblue
  - type: Construction
    graph: TargetCatTree
    node: TargetCatTreeSkyblue

- type: entity
  name: cat tree
  id: TargetCatTreeWhite
  parent: TargetCatTree
  components:
  - type: Sprite
    sprite: Structures/Furniture/cattree.rsi
    layers:
      - state: cattree
      - state: cattree-white
  - type: Construction
    graph: TargetCatTree
    node: TargetCatTreeWhite

